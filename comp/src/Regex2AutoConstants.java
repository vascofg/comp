/* Generated By:JJTree&JavaCC: Do not edit this line. Regex2AutoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Regex2AutoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CHAR = 4;
  /** RegularExpression Id. */
  int WORD = 5;
  /** RegularExpression Id. */
  int NONWORD = 6;
  /** RegularExpression Id. */
  int WHITESPACE = 7;
  /** RegularExpression Id. */
  int NONWHITESPACE = 8;
  /** RegularExpression Id. */
  int DIGIT = 9;
  /** RegularExpression Id. */
  int NONDIGIT = 10;
  /** RegularExpression Id. */
  int ANY = 11;
  /** RegularExpression Id. */
  int ZEROMORE = 12;
  /** RegularExpression Id. */
  int ONEMORE = 13;
  /** RegularExpression Id. */
  int ZEROONE = 14;
  /** RegularExpression Id. */
  int OPENPARENTHESIS = 15;
  /** RegularExpression Id. */
  int CLOSEPARENTHESIS = 16;
  /** RegularExpression Id. */
  int MATCH = 17;
  /** RegularExpression Id. */
  int MATCHNORMORE = 18;
  /** RegularExpression Id. */
  int MATCHN = 19;
  /** RegularExpression Id. */
  int BACKSLASH = 20;
  /** RegularExpression Id. */
  int POSLOOKAHEAD = 21;
  /** RegularExpression Id. */
  int NEGLOOKAHEAD = 22;
  /** RegularExpression Id. */
  int POSLOOKBEHIND = 23;
  /** RegularExpression Id. */
  int NEGLOOKBEHIND = 24;
  /** RegularExpression Id. */
  int START = 25;
  /** RegularExpression Id. */
  int END = 26;
  /** RegularExpression Id. */
  int INTEGER = 27;
  /** RegularExpression Id. */
  int LF = 28;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\" \\t \"",
    "\"\\r\"",
    "<CHAR>",
    "\"\\\\w\"",
    "\"\\\\W\"",
    "\"\\\\s\"",
    "\"\\\\S\"",
    "\"\\\\d\"",
    "\"\\\\D\"",
    "\".\"",
    "\"*\"",
    "\"+\"",
    "\"?\"",
    "\"(\"",
    "\")\"",
    "<MATCH>",
    "<MATCHNORMORE>",
    "<MATCHN>",
    "\"\\\\\"",
    "\"?=\"",
    "\"?!\"",
    "\"?<=\"",
    "\"?<!\"",
    "\"^\"",
    "\"$\"",
    "<INTEGER>",
    "\"\\n\"",
  };

}
